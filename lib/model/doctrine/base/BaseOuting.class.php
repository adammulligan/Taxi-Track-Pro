<?php

/**
 * BaseOuting
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property datetime $start_time
 * @property datetime $end_time
 * @property double $start_miles
 * @property double $end_miles
 * @property double $fuel_cost
 * @property double $fuel_paid_for
 * @property double $fuel_litres
 * @property integer $journey_count
 * @property double $earnings
 * @property string $comments
 * @property integer $user_id
 * @property boolean $is_complete
 * @property sfGuardUser $sfGuardUser
 * 
 * @method datetime    getStartTime()     Returns the current record's "start_time" value
 * @method datetime    getEndTime()       Returns the current record's "end_time" value
 * @method double      getStartMiles()    Returns the current record's "start_miles" value
 * @method double      getEndMiles()      Returns the current record's "end_miles" value
 * @method double      getFuelCost()      Returns the current record's "fuel_cost" value
 * @method double      getFuelPaidFor()   Returns the current record's "fuel_paid_for" value
 * @method double      getFuelLitres()    Returns the current record's "fuel_litres" value
 * @method integer     getJourneyCount()  Returns the current record's "journey_count" value
 * @method double      getEarnings()      Returns the current record's "earnings" value
 * @method string      getComments()      Returns the current record's "comments" value
 * @method integer     getUserId()        Returns the current record's "user_id" value
 * @method boolean     getIsComplete()    Returns the current record's "is_complete" value
 * @method sfGuardUser getSfGuardUser()   Returns the current record's "sfGuardUser" value
 * @method Outing      setStartTime()     Sets the current record's "start_time" value
 * @method Outing      setEndTime()       Sets the current record's "end_time" value
 * @method Outing      setStartMiles()    Sets the current record's "start_miles" value
 * @method Outing      setEndMiles()      Sets the current record's "end_miles" value
 * @method Outing      setFuelCost()      Sets the current record's "fuel_cost" value
 * @method Outing      setFuelPaidFor()   Sets the current record's "fuel_paid_for" value
 * @method Outing      setFuelLitres()    Sets the current record's "fuel_litres" value
 * @method Outing      setJourneyCount()  Sets the current record's "journey_count" value
 * @method Outing      setEarnings()      Sets the current record's "earnings" value
 * @method Outing      setComments()      Sets the current record's "comments" value
 * @method Outing      setUserId()        Sets the current record's "user_id" value
 * @method Outing      setIsComplete()    Sets the current record's "is_complete" value
 * @method Outing      setSfGuardUser()   Sets the current record's "sfGuardUser" value
 * 
 * @package    TaxiTrackPro
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOuting extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('outing');
        $this->hasColumn('start_time', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('end_time', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('start_miles', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('end_miles', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('fuel_cost', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('fuel_paid_for', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('fuel_litres', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('journey_count', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('earnings', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('comments', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_complete', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}